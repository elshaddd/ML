import matplotlib.pyplot as plt
from sklearn.datasets import make_circles
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ, —Ä–∞–∑–¥–µ–ª—è–µ–º –µ–≥–æ –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—É—é —á–∞—Å—Ç–∏, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É–µ–º.
X, y = make_circles(n_samples=500, noise=0.06, random_state=42)
X_tr, X_t, y_tr, y_t = train_test_split(X, y, test_size=0.3,
                                        random_state=42, stratify=y)
sc = StandardScaler()
sc.fit(X_tr)
X_tr_std = sc.transform(X_tr)
X_t_std = sc.transform(X_t)
# –î–ª—è ùëò ‚àà 1 ‚à∂ 40 –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã –º–æ–¥–µ–ª–∏: –≥—Ä–∞—Ñ–∏–∫ –æ—à–∏–±–æ–∫ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç ùëò –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ 11:b. –ú–æ–∂–Ω–æ –≤–∑—è—Ç—å ùëò ‚àà 5 ‚à∂ 13.
error_rate = []
for i in range(1, 40):
    knn = KNeighborsClassifier(n_neighbors=i)
    knn.fit(X_tr_std, y_tr)
    pred_i = knn.predict(X_t_std)
    error_rate.append(np.mean(pred_i != y_t))

plt.plot(error_rate)
plt.show()
