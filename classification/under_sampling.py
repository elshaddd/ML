from yellowbrick.target import ClassBalance
from sklearn.datasets import make_classification
from imblearn.under_sampling import RandomUnderSampler
from imblearn.under_sampling import CondensedNearestNeighbour
from imblearn.under_sampling import TomekLinks
from imblearn.under_sampling import OneSidedSelection
from imblearn.under_sampling import NeighbourhoodCleaningRule
X, y = make_classification(n_samples=200, n_features=2, n_redundant=0, n_clusters_per_class=1, weights=[0.90],
                           flip_y=0, random_state=1)
# –°–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≤—ã–±–∏—Ä–∞—é—Ç—Å—è –∏ —É–¥–∞–ª—è—é—Ç—Å—è ùëÅ –º–∞–∂–æ—Ä–∏—Ç–∞—Ä–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ 
undersample = RandomUnderSampler(random_state=0)
X, y = undersample.fit_resample(X, y)

# –°–≤—è–∑–∏ –¢–æ–º–µ–∫–∞ –æ–±—ä–µ–¥–∏–Ω—è—é—Ç –±–ª–∏–∑–∫–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
undersample = TomekLinks()
X, y = undersample.fit_resample(X, y)

# –ü—Ä–∞–≤–∏–ª–æ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω–Ω–æ–≥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Å–æ—Å–µ–¥–∞
undersample = CondensedNearestNeighbour(n_neighbors=1)
X, y = undersample.fit_resample(X, y)

# –û–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π —Å—ç–º–ø–ª–∏–Ω–≥ (One-side sampling, one-sided selection‚Äî OSS). –°–æ—á–µ—Ç–∞–Ω–∏–µ –¥–≤—É—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–æ–¥—Ö–æ–¥–æ–≤.
undersample = OneSidedSelection()
X3, y3 = undersample.fit_resample(X, y)

# –ü—Ä–∞–≤–∏–ª–æ ¬´–æ—á–∏—â–∞—é—â–µ–≥–æ¬ª —Å–æ—Å–µ–¥–∞ (Neighborhood cleaning rule‚Äî NCR)
# –í—Å–µ –æ–±—ä–µ–∫—Ç—ã –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É—é—Ç—Å—è –ø–æ –ø—Ä–∞–≤–∏–ª—É —Ç—Ä–µ—Ö –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ—Å–µ–¥–µ–π (3-NN). –£–¥–∞–ª—è—é—Ç—Å—è –º–∞–∂–æ—Ä–∏—Ç–∞—Ä–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã: –ø–æ–ª—É—á–∏–≤—à–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –º–µ—Ç–∫—É –∫–ª–∞—Å—Å–∞ –∏ —Å–æ—Å–µ–¥–∏ –º–∏–Ω–æ—Ä–∏—Ç–∞—Ä–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–µ–≤–µ—Ä–Ω–æ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö.
undersample = NeighbourhoodCleaningRule()
X, y = undersample.fit_resample(X, y)
